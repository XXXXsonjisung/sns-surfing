<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- 개인 채팅  -->
<mapper namespace="team.gsk.project.chatting.model.dao.PrivateRoomMapper">
	
	<resultMap type="ChattingMessage" id="message_rm">
			<result property="type" column="TYPE"/>
			<result property="roomNo" column="ROOM_No"/>
			<result property="message" column="MESSAGE" />
			<result property="time" column="TIME" />
			<result property="sender" column="SENDER"/>
			
			<result property="memberNickname" column="MEMBER_NICKNAME"/>
			<result property="messageNo" column="MESSAGE_NO"/>
			<result property="profile" column="MEMBER_PROFILE"/>
	</resultMap>

	<resultMap type="Member" id="member_rm">
		<id property="memberNo" column="MEMBER_NO" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberTel" column="MEMBER_PHONE" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="memberIntro" column="MEMBER_INTRO" />
		<result property="profileImage" column="MEMBER_PROFILE" />		
		<result property="coverImage" column="MEMBER_COVER_IMG" />		
		<result property="enrollDate" column="MEMBER_ENROLL_DATE" />
		<result property="deleteFlag" column="MEMBER_DELETE_FLAG" />
		<result property="authority" column="AUTHORITY" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberBirth" column="MEMBER_BIRTH" />
		<result property="roomNo" column="ROOM_NO"/>
	</resultMap>
	




	<!--채팅방의 메세지 리스트 찾기-->
	<select id="getOldMessage" resultMap="message_rm">
		SELECT MESSAGE_NO,TYPE,ROOM_NO,MESSAGE,TIME,MEMBER_NICKNAME,SENDER,m.MEMBER_PROFILE  
		FROM PRIVATE_MESSAGE LEFT JOIN "MEMBER" m ON SENDER = MEMBER_NO WHERE ROOM_NO = #{roomNo}
		ORDER BY TIME
	</select>

	
	<insert id="saveMessage"  parameterType="ChattingMessage">
		INSERT INTO PRIVATE_MESSAGE (TYPE,ROOM_NO,MESSAGE,SENDER)
		VALUES(#{type},#{roomNo},#{message},#{sender})	
	</insert>
	
		<!--채팅방 친구 조회-->
	<select id="displayFriend" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_NICKNAME, MEMBER_PROFILE  FROM "MEMBER"
		WHERE MEMBER_DELETE_FLAG ='N'
		AND MEMBER_NO IN (SELECT MEMBER_NO FROM MEMBER_PRIVATE_NO WHERE ROOM_NO = #{roomNo})
	</select>
	
	<!--초대를 위한 친구 조회-->
	<select id="allFriends" resultMap="member_rm">
			SELECT m.MEMBER_NO,m.MEMBER_NICKNAME,m.MEMBER_PROFILE
		FROM MEMBER m JOIN FOLLOW f ON m.MEMBER_ID = f.P_MEMBER_ID
        WHERE f.H_MEMBER_ID = (SELECT MEMBER_ID FROM MEMBER WHERE MEMBER_NO = #{memberNo})
		AND m.MEMBER_DELETE_FLAG = 'N'
		AND MEMBER_NO NOT IN (SELECT MEMBER_NO FROM MEMBER_PRIVATE_NO WHERE ROOM_NO = #{roomNo})
		
		
	</select>
	
	<!--방생성-->
	<insert id="createRoom">
    INSERT INTO ROOM_PRIVATE (ROOM_NAME) VALUES(NULL)
	</insert>
	
	<!--방조회-->
	<select id="selectRoomNo">
		SELECT MAX(ROOM_NO) FROM ROOM_PRIVATE
	</select>
	
	
	<!--회원 집어넣기-->
	<insert id="createPrivateRoom" parameterType="map">
		 INSERT ALL
    	<foreach collection="frienIds" item="friendId" separator=" " open="" close="">
        	INTO MEMBER_PRIVATE_NO (ROOM_NO, MEMBER_NO) VALUES (#{roomNo}, #{friendId})
    	</foreach>
   		 SELECT * FROM DUAL
	</insert>
	
</mapper>
