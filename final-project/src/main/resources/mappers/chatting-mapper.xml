<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 개인 채팅 -->

<mapper namespace="team.gsk.project.chatting.model.dao.ChattingMapper">
	
	
	<resultMap type="Member" id="member_rm">
		<id property="memberNo" column="MEMBER_NO" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberTel" column="MEMBER_PHONE" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="memberIntro" column="MEMBER_INTRO" />
		<result property="profileImage" column="MEMBER_PROFILE" />		
		<result property="coverImage" column="MEMBER_COVER_IMG" />		
		<result property="enrollDate" column="MEMBER_ENROLL_DATE" />
		<result property="deleteFlag" column="MEMBER_DELETE_FLAG" />
		<result property="authority" column="AUTHORITY" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberBirth" column="MEMBER_BIRTH" />
		<result property="roomNo" column="ROOM_NO"/>
	</resultMap>
	
	<resultMap type="ChatRoomList" id="roomList_rm">
			<result property="roomNo" column="ROOM_NO"/>
			<result property="roomName" column="ROOM_NAME"/>
			<result property="roomImg" column="ROOM_IMG"/>
			<result property="sender" column="SENDER"/>
			<result property="chattingMessage" column="MESSAGE_SUBSTR" />
			<result property="time" column="TIME" />
	</resultMap>
	
	<resultMap type="ChattingMessage" id="message_rm">
			<result property="type" column="TYPE"/>
			<result property="roomNo" column="ROOM_No"/>
			<result property="message" column="MESSAGE" />
			<result property="time" column="TIME" />
			<result property="sender" column="SENDER"/>

			<result property="memberName" column="MEMBER_NAME"/>
			<result property="memberNickname" column="MEMBER_NICKNAME"/>
			<result property="profile" column="MEMBER_PROFILE"/>

	</resultMap>
	
	
	<resultMap type="PrivateRoomList" id="privateList_rm">
			<result property="roomNo" column="ROOM_NO"/>
			<result property="sender" column="SENDER"/>
			<result property="memberNickname" column="MEMBER_NICKNAME"/>
			<result property="memberProfile" column="MEMBER_PROFILE"/>
			<result property="chattingMessage" column="MESSAGE_SUBSTR" />
			<result property="time" column="TIME" />
	</resultMap>
	
	
	
	
	<!--채팅 초대 찾기-->
	<select id="selectTarget" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_PROFILE FROM "MEMBER"
		WHERE MEMBER_NICKNAME LIKE '%${query}%'
		AND MEMBER_DELETE_FLAG = 'N'
		AND MEMBER_NO != ${memberNo}
	</select>
	
	
	
	
	<!--회원의 채팅방 리스트 찾기-->
	<select id="selectRoomList"  resultMap="roomList_rm">
	SELECT ROOM.ROOM_NO, ROOM.ROOM_NAME,ROOM.ROOM_IMG,CHATTING.SENDER, DBMS_LOB.SUBSTR(CHATTING.MESSAGE, 4000) AS MESSAGE_SUBSTR, CHATTING.TIME
		FROM MEMBER MEM
		JOIN MEMBER_ROOM_NO MRN ON MEM.MEMBER_NO = MRN.MEMBER_NO 
		JOIN ROOM_GROUP ROOM ON MRN.ROOM_NO = ROOM.ROOM_NO 
		LEFT JOIN (
		    SELECT ROOM_NO, SENDER, MESSAGE, TIME
		    FROM (
		        SELECT ROOM_NO, SENDER, MESSAGE, TIME,
		               ROW_NUMBER() OVER (PARTITION BY ROOM_NO ORDER BY TIME DESC) AS rn
		        FROM CHATTING_MESSAGE
		    ) CM
		    WHERE CM.rn = 1
		) CHATTING ON ROOM.ROOM_NO = CHATTING.ROOM_NO
		WHERE MEM.MEMBER_NO = #{memberNo}
		ORDER BY ROOM_NO DESC
	</select>
	
	<!--채팅방의 메세지 리스트 찾기-->
	<select id="getOldMessage" resultMap="message_rm">
		SELECT TYPE,ROOM_NO,MESSAGE,TIME,MEMBER_NICKNAME,SENDER,m.MEMBER_PROFILE  
		FROM CHATTING_MESSAGE LEFT JOIN "MEMBER" m ON SENDER = MEMBER_NO WHERE ROOM_NO  = #{roomNo}
		ORDER BY TIME
	</select>
	
	<!--개인 채팅 메세지 저장-->
	<insert id="saveMessage"  parameterType="ChattingMessage">
		INSERT INTO CHATTING_MESSAGE (TYPE,ROOM_NO,MESSAGE,SENDER)
		VALUES(#{type},#{roomNo},#{message},#{sender})	
	</insert>


	<!--초대를 위한 친구 조회-->
	<select id="allFriends" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_NICKNAME, MEMBER_PROFILE  FROM "MEMBER"
		WHERE MEMBER_DELETE_FLAG ='N'
		AND MEMBER_NO NOT IN (SELECT MEMBER_NO FROM MEMBER_ROOM_NO WHERE ROOM_NO = #{roomNo})
	</select>


	<!--친구 초대-->
	<insert id="invite" parameterType="map">
	     INSERT ALL
    	<foreach collection="frienIds" item="friendId" separator=" " open="" close="">
        	INTO MEMBER_PRIVATE_NO (ROOM_NO, MEMBER_NO) VALUES (#{roomNo}, #{friendId})
    	</foreach>
   		 SELECT * FROM DUAL
	</insert>

	<!--채팅방 친구 조회-->
	<select id="displayFriend" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_NICKNAME, MEMBER_PROFILE  FROM "MEMBER"
		WHERE MEMBER_DELETE_FLAG ='N'
		AND MEMBER_NO IN (SELECT MEMBER_NO FROM MEMBER_ROOM_NO WHERE ROOM_NO = #{roomNo})
	</select>
	
	<!--채팅방 나가기-->
	<delete id="exitMember">
		DELETE FROM MEMBER_ROOM_NO
		WHERE ROOM_NO = #{roomNo}
    	AND MEMBER_NO IN #{memberNo}
	</delete>

	<!--채팅방 만들기 위한 친구 조회-->
	<select id="findFriends" resultMap="member_rm">
		SELECT m.MEMBER_NO,m.MEMBER_NICKNAME,m.MEMBER_PROFILE
		FROM MEMBER m JOIN FOLLOW f ON m.MEMBER_ID = f.P_MEMBER_ID
        WHERE f.H_MEMBER_ID = (SELECT MEMBER_ID FROM MEMBER WHERE MEMBER_NO = #{memberNo})
		AND m.MEMBER_DELETE_FLAG = 'N'
	</select>
	
	
	<!--개인 채팅 리스트 조회-->
	<select id="selectPrivateList" resultMap="privateList_rm">
		SELECT ROOM.ROOM_NO,CHATTING.SENDER,MEM.MEMBER_NICKNAME,MEM.MEMBER_PROFILE, DBMS_LOB.SUBSTR(CHATTING.MESSAGE, 4000) AS MESSAGE_SUBSTR, CHATTING.TIME
		FROM MEMBER MEM
		JOIN MEMBER_PRIVATE_NO MRN ON MEM.MEMBER_NO = MRN.MEMBER_NO 
		JOIN ROOM_PRIVATE ROOM ON MRN.ROOM_NO = ROOM.ROOM_NO 
		LEFT JOIN (
		    SELECT ROOM_NO, SENDER, MESSAGE, TIME
		    FROM (
		        SELECT ROOM_NO, SENDER, MESSAGE, TIME,
		               ROW_NUMBER() OVER (PARTITION BY ROOM_NO ORDER BY TIME DESC) AS rn
		        FROM PRIVATE_MESSAGE
		    ) CM
		    WHERE CM.rn = 1
		) CHATTING ON ROOM.ROOM_NO = CHATTING.ROOM_NO
		WHERE MEM.MEMBER_NO = #{memberNo}
	</select>

</mapper>


